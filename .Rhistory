width = 0.3) +
coord_flip() +
labs(title = "Participación en protesta por nivel educativo",
subtitle = "Con intervalos de confianza 95%",
x = "Nivel educativo", y = "% que participó en protesta") +
theme_minimal()
# Gráfico
p_educ <- ggplot(tab_educ, aes(x = reorder(educ_cat, index_medio), y = prop_protesta)) +
geom_col(fill = "steelblue", alpha = 0.8) +
geom_errorbar(aes(ymin = (index_medio - 1.96*se)*100/max(elsoc_final$protesta_index, na.rm=TRUE),
ymax = (index_medio + 1.96*se)*100/max(elsoc_final$protesta_index, na.rm=TRUE)),
width = 0.3) +
coord_flip() +
labs(title = "Participación en protesta por nivel educativo",
subtitle = "Con intervalos de confianza 95%",
x = "Nivel educativo", y = "% que participó en protesta") +
theme_minimal()
# Crear la tabla de datos
tab_educ <- elsoc_final %>%
filter(!is.na(educ_cat)) %>%
group_by(educ_cat) %>%
summarise(
n = n(),
prop_protesta = mean(protesta_dummy, na.rm = TRUE) * 100,
index_medio = mean(protesta_index, na.rm = TRUE),
se = sd(protesta_dummy, na.rm = TRUE) / sqrt(n())
) %>%
ungroup()
# Gráfico
p_educ <- ggplot(tab_educ, aes(x = reorder(educ_cat, index_medio), y = prop_protesta)) +
geom_col(fill = "steelblue", alpha = 0.8) +
geom_errorbar(aes(ymin = (index_medio - 1.96*se)*100/max(elsoc_final$protesta_index, na.rm=TRUE),
ymax = (index_medio + 1.96*se)*100/max(elsoc_final$protesta_index, na.rm=TRUE)),
width = 0.3) +
coord_flip() +
labs(title = "Participación en protesta por nivel educativo",
subtitle = "Con intervalos de confianza 95%",
x = "Nivel educativo", y = "% que participó en protesta") +
theme_minimal()
print(p_educ)
# Gráfico
p_educ <- ggplot(tab_educ, aes(x = reorder(educ_cat, prop_protesta), y = prop_protesta)) +
geom_col(fill = "steelblue", alpha = 0.8) +
geom_errorbar(aes(ymin = prop_protesta - 1.96*se*100,
ymax = prop_protesta + 1.96*se*100),
width = 0.3, color = "black") +
coord_flip() +
labs(title = "Participación en protesta por nivel educativo",
subtitle = "Con intervalos de confianza 95%",
x = "Nivel educativo",
y = "% que participó en protesta",
caption = "Fuente: Elaboración propia con datos ELSOC (2016-2023)") +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 14),
plot.caption = element_text(hjust = 0, size = 9, color = "gray30")
)
print(p_educ)
# Crear la tabla de datos
tab_educ <- elsoc_final %>%
filter(!is.na(educ_cat)) %>%
group_by(educ_cat) %>%
summarise(
n = n(),
prop_protesta = mean(protesta_dummy, na.rm = TRUE) * 100,
se_prop = sqrt(mean(protesta_dummy, na.rm = TRUE) *
(1 - mean(protesta_dummy, na.rm = TRUE)) / n()) * 100
) %>%
ungroup()
# Gráfico
p_educ <- ggplot(tab_educ, aes(x = reorder(educ_cat, prop_protesta), y = prop_protesta)) +
geom_col(fill = "steelblue", alpha = 0.8) +
geom_errorbar(aes(ymin = pmax(0, prop_protesta - 1.96*se_prop),
ymax = pmin(100, prop_protesta + 1.96*se_prop)),
width = 0.3, color = "black", linewidth = 0.8) +
coord_flip() +
labs(title = "Participación en protesta por nivel educativo",
subtitle = "Con intervalos de confianza 95%",
x = "Nivel educativo",
y = "% que participó en protesta",
caption = "Fuente: Elaboración propia con datos ELSOC (2016-2023)") +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 14),
plot.caption = element_text(hjust = 0, size = 9, color = "gray30")
)
print(p_educ)
# Crear la tabla de datos
tab_educ <- elsoc_final %>%
filter(!is.na(educ_cat)) %>%
group_by(educ_cat) %>%
summarise(
n = n(),
prop_protesta = mean(protesta_dummy, na.rm = TRUE) * 100,
se_prop = sqrt(mean(protesta_dummy, na.rm = TRUE) *
(1 - mean(protesta_dummy, na.rm = TRUE)) / n()) * 100
) %>%
ungroup()
# Gráfico (SIN coord_flip, rotando las etiquetas)
p_educ <- ggplot(tab_educ, aes(x = reorder(educ_cat, prop_protesta), y = prop_protesta)) +
geom_col(fill = "steelblue", alpha = 0.8) +
geom_errorbar(aes(ymin = pmax(0, prop_protesta - 1.96*se_prop),
ymax = pmin(100, prop_protesta + 1.96*se_prop)),
width = 0.3, color = "black", linewidth = 0.8) +
labs(title = "Participación en protesta por nivel educativo",
subtitle = "Con intervalos de confianza 95%",
x = "Nivel educativo",
y = "% que participó en protesta",
caption = "Fuente: Elaboración propia con datos ELSOC (2016-2023)") +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 14),
plot.caption = element_text(hjust = 0, size = 9, color = "gray30"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 10)
)
print(p_educ)
# Crear la tabla de datos
tab_educ <- elsoc_final %>%
filter(!is.na(educ_cat)) %>%
group_by(educ_cat) %>%
summarise(
n = n(),
prop_protesta = mean(protesta_dummy, na.rm = TRUE) * 100,
se_prop = sqrt(mean(protesta_dummy, na.rm = TRUE) *
(1 - mean(protesta_dummy, na.rm = TRUE)) / n()) * 100
) %>%
ungroup()
# Gráfico
p_educ <- ggplot(tab_educ, aes(x = reorder(educ_cat, prop_protesta), y = prop_protesta)) +
geom_col(fill = "steelblue", alpha = 0.8) +
geom_errorbarh(aes(xmin = reorder(educ_cat, prop_protesta),
xmax = reorder(educ_cat, prop_protesta),
y = prop_protesta,
ymin = pmax(0, prop_protesta - 1.96*se_prop),
ymax = pmin(100, prop_protesta + 1.96*se_prop)),
height = 0.3, color = "black", linewidth = 0.8) +
coord_flip() +
labs(title = "Participación en protesta por nivel educativo",
subtitle = "Con intervalos de confianza 95%",
x = "Nivel educativo",
y = "% que participó en protesta",
caption = "Fuente: Elaboración propia con datos ELSOC (2016-2023)") +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 14),
plot.caption = element_text(hjust = 0, size = 9, color = "gray30")
)
print(p_educ)
print(tab_educ)
# Gráfico mejorado
p_educ <- ggplot(tab_educ, aes(x = reorder(educ_cat, prop_protesta), y = prop_protesta)) +
geom_col(fill = "steelblue", alpha = 0.7, width = 0.6) +
geom_errorbar(aes(ymin = prop_protesta - 1.96*se_prop,
ymax = prop_protesta + 1.96*se_prop),
width = 0.25,
color = "black",
linewidth = 0.7) +
geom_text(aes(label = sprintf("%.1f%%", prop_protesta)),
vjust = -0.5, size = 3.5, fontface = "bold") +
ylim(0, max(tab_educ$prop_protesta + 1.96*tab_educ$se_prop) * 1.1) +  # Dar espacio arriba
labs(title = "Participación en protesta por nivel educativo",
subtitle = "Con intervalos de confianza 95%",
x = NULL,
y = "% que participó en protesta",
caption = "Fuente: Elaboración propia con datos ELSOC (2016-2023)") +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 14),
plot.subtitle = element_text(size = 11),
plot.caption = element_text(hjust = 0, size = 9, color = "gray30"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
panel.grid.major.x = element_blank()
)
print(p_educ)
# Gráfico con errorbars AL FINAL de las barras
p_educ <- ggplot(tab_educ, aes(x = reorder(educ_cat, prop_protesta), y = prop_protesta)) +
geom_col(fill = "steelblue", alpha = 0.7, width = 0.6) +
geom_errorbar(aes(ymin = prop_protesta,
ymax = prop_protesta + 1.96*se_prop),
width = 0.25,
color = "black",
linewidth = 0.7) +
geom_text(aes(label = sprintf("%.1f%%", prop_protesta)),
vjust = 2.5, size = 3.5, fontface = "bold", color = "white") +
ylim(0, max(tab_educ$prop_protesta + 1.96*tab_educ$se_prop) * 1.1) +
labs(title = "Participación en protesta por nivel educativo",
subtitle = "Con intervalos de confianza 95%",
x = NULL,
y = "% que participó en protesta",
caption = "Fuente: Elaboración propia con datos ELSOC (2016-2023)") +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 14),
plot.subtitle = element_text(size = 11),
plot.caption = element_text(hjust = 0, size = 9, color = "gray30"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
panel.grid.major.x = element_blank()
)
print(p_educ)
#| label: fig-des-6
#| warning: false
#| message: false
#| echo: false
# Crear la tabla de datos
tab_educ <- elsoc_final %>%
filter(!is.na(educ_cat)) %>%
group_by(educ_cat) %>%
summarise(
n = n(),
prop_protesta = mean(protesta_dummy, na.rm = TRUE) * 100,
se_prop = sqrt(mean(protesta_dummy, na.rm = TRUE) *
(1 - mean(protesta_dummy, na.rm = TRUE)) / n()) * 100
) %>%
ungroup()
# Gráfico con errorbars AL FINAL de las barras
p_educ <- ggplot(tab_educ, aes(x = reorder(educ_cat, prop_protesta), y = prop_protesta)) +
geom_col(fill = "steelblue", alpha = 0.7, width = 0.6) +
geom_errorbar(aes(ymin = prop_protesta,
ymax = prop_protesta + 1.96*se_prop),
width = 0.25,
color = "black",
linewidth = 0.7) +
geom_text(aes(label = sprintf("%.1f%%", prop_protesta)),
vjust = 2.5, size = 3.5, fontface = "bold", color = "white") +
ylim(0, max(tab_educ$prop_protesta + 1.96*tab_educ$se_prop) * 1.1) +
labs(title = "Participación en protesta por nivel educativo",
subtitle = "Con intervalos de confianza 95%",
x = NULL,
y = "% que participó en protesta",
caption = "Fuente: Elaboración propia con datos ELSOC (2016-2023)") +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 14),
plot.subtitle = element_text(size = 11),
plot.caption = element_text(hjust = 0, size = 9, color = "gray30"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
panel.grid.major.x = element_blank()
)
print(p_educ)
#| warning: false
#| message: false
#| echo: false
# Test ANOVA
mod_anova <- lm(protesta_index ~ educ_cat_factor, data = elsoc_final)
cat("\nTest ANOVA:\n")
print(anova(mod_anova))
#| warning: false
#| message: false
#| echo: false
# Medias marginales estimadas
emm_educ <- emmeans(mod_anova, ~ educ_cat_factor)
print(summary(emm_educ))
# Todas las comparaciones por pares (Tukey) CON intervalos de confianza
comp_pares <- pairs(emm_educ, adjust = "tukey")
comp_pares_ci <- confint(comp_pares)  # ESTO AGREGA LOS IC
# Convertir a data frame
comp_df_completo <- as.data.frame(comp_pares_ci)
# Ver estructura
print(names(comp_df_completo))
# Medias marginales estimadas
emm_educ <- emmeans(mod_anova, ~ educ_cat_factor)
# Comparaciones por pares (Tukey)
comp_pares <- pairs(emm_educ, adjust = "tukey")
# Obtener resultados completos (con p-valores Y con IC)
comp_summary <- summary(comp_pares, infer = TRUE)  # infer=TRUE agrega los IC
# Convertir a data frame
comp_df_completo <- as.data.frame(comp_summary)
# Ver columnas disponibles
print(names(comp_df_completo))
# Tabla de TODAS las comparaciones
tab_completa <- comp_df_completo %>%
mutate(
Comparación = as.character(contrast),
Diferencia = sprintf("%.3f", estimate),
`Error Est.` = sprintf("%.3f", SE),
`IC 95%` = sprintf("[%.3f, %.3f]", lower.CL, upper.CL),
`p-valor` = ifelse(p.value < 0.001, "<0.001", sprintf("%.3f", p.value)),
Sig = case_when(
p.value < 0.001 ~ "***",
p.value < 0.01 ~ "**",
p.value < 0.05 ~ "*",
p.value < 0.1 ~ ".",
TRUE ~ ""
)
) %>%
dplyr::select(Comparación, Diferencia, `Error Est.`, `IC 95%`, `p-valor`, Sig)
# Tabla completa formateada
tab_completa_formatted <- tab_completa %>%
kbl(caption = "Comparaciones múltiples entre niveles educativos (Test de Tukey)",
align = c("l", "c", "c", "c", "c", "c")) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
full_width = FALSE,
font_size = 9) %>%
scroll_box(height = "500px", width = "100%") %>%
footnote(general = "Fuente: Elaboración propia con datos ELSOC 2016-2023.",
symbol = "Significancia: *** p<0.001, ** p<0.01, * p<0.05, . p<0.1")
print(tab_completa_formatted)
#| warning: false
#| message: false
#| echo: false
# TABLA DE COMPARACIONES CLAVE PARA H1
tab_h1 <- comp_df_completo %>%
filter(
# H1a: Técnica completa vs Media completa (fila 8 - INVERTIDA)
contrast == "Media completa - Técnica superior completa" |
# Técnica completa vs Media incompleta (fila 3 - INVERTIDA)
contrast == "Media incompleta o menos - Técnica superior completa" |
# H1b: Universitaria completa vs Técnica completa (fila 17)
contrast == "Técnica superior completa - Universitaria completa" |
# Universitaria completa vs Media completa (fila 10 - INVERTIDA)
contrast == "Media completa - Universitaria completa" |
# Media completa vs Media incompleta (fila 1 - INVERTIDA)
contrast == "Media incompleta o menos - Media completa"
) %>%
mutate(
# INVERTIR el signo cuando sea necesario para interpretar correctamente
estimate_adj = case_when(
contrast == "Media completa - Técnica superior completa" ~ -estimate,
contrast == "Media incompleta o menos - Técnica superior completa" ~ -estimate,
contrast == "Media completa - Universitaria completa" ~ -estimate,
contrast == "Media incompleta o menos - Media completa" ~ -estimate,
TRUE ~ estimate
),
# Crear etiquetas más claras
Comparación = case_when(
contrast == "Media completa - Técnica superior completa" ~
"Técnica superior completa - Media completa",
contrast == "Media incompleta o menos - Técnica superior completa" ~
"Técnica superior completa - Media incompleta o menos",
contrast == "Técnica superior completa - Universitaria completa" ~
"Técnica superior completa - Universitaria completa",
contrast == "Media completa - Universitaria completa" ~
"Universitaria completa - Media completa",
contrast == "Media incompleta o menos - Media completa" ~
"Media completa - Media incompleta o menos",
TRUE ~ as.character(contrast)
),
Diferencia = sprintf("%.3f", estimate_adj),
`IC 95%` = sprintf("[%.3f, %.3f]",
ifelse(grepl("^Media", contrast), -upper.CL, lower.CL),
ifelse(grepl("^Media", contrast), -lower.CL, upper.CL)),
`p-valor` = ifelse(p.value < 0.001, "<0.001", sprintf("%.3f", p.value)),
Sig = case_when(
p.value < 0.001 ~ "***",
p.value < 0.01 ~ "**",
p.value < 0.05 ~ "*",
p.value < 0.1 ~ ".",
TRUE ~ ""
),
Hipótesis = case_when(
grepl("Técnica.*Media completa", Comparación) ~ "H1a",
grepl("Técnica.*Universitaria", Comparación) ~ "H1b",
TRUE ~ "Referencia"
)
) %>%
dplyr::select(Hipótesis, Comparación, Diferencia, `IC 95%`, `p-valor`, Sig)
# Verificar que encontró algo
cat("\n=== NÚMERO DE COMPARACIONES ENCONTRADAS ===\n")
print(nrow(tab_h1))
# Formatear tabla
tab_h1_formatted <- tab_h1 %>%
kbl(caption = "Comparaciones clave para H1: No linealidad de la educación",
align = c("c", "l", "c", "c", "c", "c")) %>%
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE) %>%
row_spec(which(tab_h1$Hipótesis == "H1a"),
background = "#FFF3CD", bold = TRUE) %>%
row_spec(which(tab_h1$Hipótesis == "H1b"),
background = "#D1ECF1", bold = TRUE) %>%
footnote(
general = "Test de Tukey con ajuste por comparaciones múltiples.",
alphabet = c(
"H1a (amarillo): Técnica superior completa < Media completa (no linealidad)",
"H1b (azul): Universitaria completa > Técnica superior completa",
"Valores positivos: primer grupo protesta MÁS que segundo grupo"
)
)
print(tab_h1_formatted)
#| warning: false
#| message: false
#| echo: false
tab_mov <- elsoc_final %>%
filter(!is.na(movilidad_cat)) %>%
group_by(movilidad_cat) %>%
summarise(
n = n(),
prop_protesta = mean(protesta_dummy, na.rm = TRUE) * 100,
index_medio = mean(protesta_index, na.rm = TRUE)
)
# Formatear con kableExtra
tab_mov_formatted <- tab_mov %>%
mutate(
`Movilidad Educacional` = movilidad_cat,
`N` = format(n, big.mark = ","),
`% Protesta` = sprintf("%.2f%%", prop_protesta),
`Índice Medio` = sprintf("%.3f", index_medio)
) %>%
dplyr::select(`Movilidad Educacional`, N, `% Protesta`, `Índice Medio`) %>%
kbl(caption = "Participación en Protesta por Movilidad Educacional",
align = c("l", "c", "c", "c")) %>%
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE) %>%
row_spec(0, bold = TRUE, background = "#f0f0f0") %>%
row_spec(which(tab_mov$movilidad_cat == "Ascendente alta"),
background = "#D1ECF1", bold = TRUE) %>%
footnote(
general = "Fuente: Elaboración propia con datos ELSOC 2016-2023.",
alphabet = c(
"% Protesta: Porcentaje que participó en al menos una forma de protesta",
"Índice Medio: Promedio del índice de protesta (0-2)"
)
)
print(tab_mov_formatted)
#| warning: false
#| message: false
#| echo: false
# Gráfico
p_mov <- ggplot(tab_mov, aes(x = movilidad_cat, y = prop_protesta, fill = movilidad_cat)) +
geom_col(alpha = 0.8) +
scale_color_brewer(palette = "Set2", name = "Movilidad\nEducacional") +
scale_fill_brewer(palette = "Set2", name = "Movilidad\nEducacional") +
labs(title = "Participación en protesta por movilidad educacional",
x = "Tipo de movilidad", y = "% que participó en protesta",
caption = "Fuente: Elaboración propia con datos ELSOC (2016-2023)") +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 14),
plot.subtitle = element_text(size = 11),
plot.caption = element_text(hjust = 0, size = 9, color = "gray30"),
legend.position = "right")
print(p_mov)
#| warning: false
#| message: false
#| echo: false
# 4.3 Matriz Origen-Destino
matriz_prot <- elsoc_final %>%
filter(!is.na(educ_origen) & !is.na(educ_destino)) %>%
group_by(educ_origen, educ_destino) %>%
summarise(
n = n(),
prop_protesta = mean(protesta_dummy, na.rm = TRUE) * 100,
.groups = "drop"
)
p_matriz <- ggplot(matriz_prot, aes(x = educ_origen, y = educ_destino, fill = prop_protesta)) +
geom_tile(color = "white") +
geom_text(aes(label = paste0(round(prop_protesta, 1), "%\n(n=", n, ")")),
color = "white", size = 4, fontface = "bold") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red",
midpoint = mean(matriz_prot$prop_protesta, na.rm = TRUE)) +
labs(title = "Matriz de movilidad educacional y protesta",
subtitle = "% que participó en protesta según origen y destino educacional",
x = "Educación padres (origen)", y = "Educación propia (destino)",
fill = "% Protesta") +
theme_minimal() +
theme(text = element_text(size = 12))
print(p_matriz)
#| warning: false
#| message: false
#| echo: false
# 4.4 Interacción Educación × Movilidad
p_interact <- elsoc_final %>%
filter(!is.na(movilidad_cat) & !is.na(educ_cat)) %>%
group_by(educ_cat, movilidad_cat) %>%
summarise(prop_protesta = mean(protesta_dummy, na.rm = TRUE) * 100, .groups = "drop") %>%
ggplot(aes(x = educ_cat, y = prop_protesta, color = movilidad_cat, group = movilidad_cat)) +
geom_line(size = 1) +
geom_point(size = 3) +
labs(title = "Interacción educación × movilidad sobre protesta",
x = "Nivel educativo", y = "% que participó", color = "Movilidad") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(p_interact)
# Modelo 2: Solo movilidad
m2 <- lm(protesta_index ~ movilidad_cat_factor, data = elsoc_final)
# Modelo 1: Solo educación
m1 <- lm(protesta_index ~ educ_cat_factor, data = elsoc_final)
# Modelo 3: Aditivo
m3 <- lm(protesta_index ~ educ_cat_factor + movilidad_cat_factor, data = elsoc_final)
# Modelo 4: Interacción
m4 <- lm(protesta_index ~ educ_cat_factor * movilidad_cat_factor, data = elsoc_final)
# Modelo 5: Con controles
m5 <- lm(protesta_index ~ educ_cat_factor + movilidad_cat_factor +
edad + edad_cuadratica + mujer + ideologia_std + egp3 + factor(year),
data = elsoc_final)
# Tabla comparativa
screenreg(list(m1, m2, m3, m4, m5),
custom.model.names = c("Solo Educ", "Solo Mov", "Aditivo", "Interacción", "Con controles"),
digits = 3)
#| label: fig-des-3
#| warning: false
#| message: false
#| echo: false
# Tabla 1: Educación
tab_educ_desc <- elsoc_final %>%
count(educ_cat) %>%
filter(!is.na(educ_cat)) %>%
mutate(
Porcentaje = (n / sum(n)) * 100,
`Porcentaje Acumulado` = cumsum(Porcentaje)
) %>%
rename(`Nivel Educativo` = educ_cat, N = n, `%` = Porcentaje) %>%
kbl(caption = "Distribución de Nivel Educativo",
align = c("l", "c", "c", "c"),
digits = 2) %>%
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE) %>%
row_spec(0, bold = TRUE, background = "#f0f0f0") %>%
add_header_above(c(" " = 1, "Frecuencias" = 3)) %>%
footnote(general = "Fuente: Elaboración propia con datos ELSOC (2016-2023)",
number = paste("N total =", format(sum(!is.na(elsoc_final$educ_cat)),
big.mark = ",")))
print(tab_educ_desc)
