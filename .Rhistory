# Ver cuántas observaciones por persona
table(table(elsoc_long$idencuesta))
# 3. EXPLORAR VARIABLES CLAVE ================
# Protesta
table(elsoc_long$asist_marcha)
summary(elsoc_long$asist_marcha)
# Educación (ver codificación)
table(elsoc_long$educ_encuestado)
table(elsoc_long$educ_padre)
table(elsoc_long$educ_madre)
# Si vienen con etiquetas, ver valores
attr(elsoc_long$educ_encuestado, "labels")
#| echo: false
#| warning: false
#| message: false
#| results: false
# ============================================
# 4. RECODIFICACIÓN ==========================
# ============================================
elsoc_long <- elsoc_long %>%
mutate(
# PROTESTA: convertir a numérico y revertir si es necesario
# Asumo: 1=Nunca, 2=Raramente, 3=A veces, 4=Frecuentemente, 5=Muy frecuentemente
# Si está al revés, ajusta
protesta = as.numeric(asist_marcha),
# EDUCACIÓN: Convertir categorías a anos
# AJUSTAR según la codificación real de ELSOC:
# Típicamente en ELSOC:
# 1 = Sin estudios
# 2 = Básica incompleta
# 3 = Básica completa
# 4 = Media incompleta
# 5 = Media completa
# 6 = Técnica superior incompleta
# 7 = Técnica superior completa
# 8 = Universitaria incompleta
# 9 = Universitaria completa
# 10 = Postgrado
anos_educ_resp = case_when(
educ_encuestado == 1 ~ 0,   # Sin estudios
educ_encuestado == 2 ~ 4,   # Básica incompleta
educ_encuestado == 3 ~ 8,   # Básica completa
educ_encuestado == 4 ~ 10,  # Media incompleta
educ_encuestado == 5 ~ 12,  # Media completa
educ_encuestado == 6 ~ 13,  # Técnica incompleta
educ_encuestado == 7 ~ 14,  # Técnica completa
educ_encuestado == 8 ~ 15,  # Universitaria incompleta
educ_encuestado == 9 ~ 16,  # Universitaria completa
educ_encuestado == 10 ~ 18, # Postgrado
TRUE ~ NA_real_
),
anos_educ_padre = case_when(
educ_padre == 1 ~ 0,
educ_padre == 2 ~ 4,
educ_padre == 3 ~ 8,
educ_padre == 4 ~ 10,
educ_padre == 5 ~ 12,
educ_padre == 6 ~ 13,
educ_padre == 7 ~ 14,
educ_padre == 8 ~ 15,
educ_padre == 9 ~ 16,
educ_padre == 10 ~ 18,
TRUE ~ NA_real_
),
anos_educ_madre = case_when(
educ_madre == 1 ~ 0,
educ_madre == 2 ~ 4,
educ_madre == 3 ~ 8,
educ_madre == 4 ~ 10,
educ_madre == 5 ~ 12,
educ_madre == 6 ~ 13,
educ_madre == 7 ~ 14,
educ_madre == 8 ~ 15,
educ_madre == 9 ~ 16,
educ_madre == 10 ~ 18,
TRUE ~ NA_real_
),
# Educación parental: máximo entre padre y madre
anos_educ_padres = pmax(anos_educ_padre, anos_educ_madre, na.rm = TRUE)
)
# Verificar recodificación
summary(elsoc_long$protesta)
summary(elsoc_long$anos_educ_resp)
summary(elsoc_long$anos_educ_padres)
# Ver distribución
table(elsoc_long$educ_encuestado, elsoc_long$anos_educ_resp)
#| echo: false
#| warning: false
#| message: false
#| results: false
# ============================================
# 5. MOVILIDAD EDUCACIONAL ===================
# ============================================
elsoc_long <- elsoc_long %>%
mutate(
# Movilidad continua
movilidad_educ = anos_educ_resp - anos_educ_padres,
# Movilidad categórica
movilidad_cat = case_when(
movilidad_educ >= 4 ~ "Alta movilidad ascendente",
movilidad_educ >= 1 & movilidad_educ < 4 ~ "Movilidad moderada",
movilidad_educ == 0 ~ "Sin movilidad",
movilidad_educ < 0 ~ "Movilidad descendente",
TRUE ~ NA_character_
),
# Grupos ampliados (incluyendo técnicos)
grupo_hipotesis_amplio = case_when(
# Universitarios con alta movilidad
anos_educ_resp >= 16 & movilidad_educ >= 4 ~
"Universitarios alta movilidad",
# Universitarios sin movilidad
anos_educ_resp >= 16 & movilidad_educ <= 1 ~
"Universitarios sin movilidad",
# Técnicos con alta movilidad
anos_educ_resp >= 13 & anos_educ_resp < 16 & movilidad_educ >= 3 ~
"Técnicos alta movilidad",
# Técnicos sin movilidad
anos_educ_resp >= 13 & anos_educ_resp < 16 & movilidad_educ <= 1 ~
"Técnicos sin movilidad",
# Media completa
anos_educ_resp >= 12 & anos_educ_resp < 13 ~
"Media completa",
# Baja educación
anos_educ_resp < 12 ~
"Baja educación",
TRUE ~ "Otros"
)
)
# Ordenar factor
elsoc_long$movilidad_cat <- factor(
elsoc_long$movilidad_cat,
levels = c("Movilidad descendente", "Sin movilidad",
"Movilidad moderada", "Alta movilidad ascendente")
)
elsoc_long$grupo_hipotesis_amplio <- factor(
elsoc_long$grupo_hipotesis_amplio,
levels = c("Baja educación", "Media completa",
"Técnicos sin movilidad", "Técnicos alta movilidad",
"Universitarios sin movilidad", "Universitarios alta movilidad",
"Otros")
)
# Verificar distribución
cat("\n=== DISTRIBUCIÓN MOVILIDAD CATEGÓRICA ===\n")
table(elsoc_long$movilidad_cat)
prop.table(table(elsoc_long$movilidad_cat)) * 100
cat("\n=== DISTRIBUCIÓN GRUPOS AMPLIADOS ===\n")
table(elsoc_long$grupo_hipotesis_amplio)
prop.table(table(elsoc_long$grupo_hipotesis_amplio)) * 100
#| echo: false
#| warning: false
#| message: false
#| results: false
# ============================================
# 6. PREPARAR CONTROLES ======================
# ============================================
# Identificar variables de control disponibles en ELSOC
# Ajustar según lo que tengas:
names(elsoc_long)[grep("edad|genero|ideol", names(elsoc_long), ignore.case = TRUE)]
# Preparar controles (AJUSTAR NOMBRES según tu base)
elsoc_long <- elsoc_long %>%
mutate(
# Edad
edad = as.numeric(edad),
# Sexo
genero = ifelse(genero == 2, 1, 0),
# Control ANTES de limpiar ideología
sin_ideologia = ifelse(ideologia == 12 | is.na(ideologia), 1, 0),
# Escala ideológica limpia (DESPUÉS del control)
ideologia = case_when(
ideologia >= 0 & ideologia <= 10 ~ as.numeric(ideologia),
TRUE ~ NA_real_
),
# Ola como factor
ola_factor = as.factor(ola)
)
# Ver resumen de controles
summary(elsoc_long[, c("edad", "genero", "ideologia", "sin_ideologia")])
# Casos completos para análisis
cat("\n=== CASOS CON DATOS COMPLETOS ===\n")
elsoc_analisis <- elsoc_long %>%
filter(!is.na(protesta) &
!is.na(anos_educ_resp) &
!is.na(anos_educ_padres) &
!is.na(movilidad_educ) &
!is.na(edad) &
!is.na(genero) &
!is.na(grupo_hipotesis_amplio))
cat("Observaciones originales:", nrow(elsoc_long), "\n")
cat("Observaciones para análisis:", nrow(elsoc_analisis), "\n")
cat("Individuos únicos:", n_distinct(elsoc_analisis$idencuesta), "\n")
#| echo: false
#| warning: false
#| message: false
# ============================================
# 7. ESTADÍSTICAS DESCRIPTIVAS ===============
# ============================================
# Tabla descriptiva general
descriptivos_general <- elsoc_analisis %>%
summarise(
n_obs = n(),
n_personas = n_distinct(idencuesta),
protesta_media = mean(protesta, na.rm = TRUE),
protesta_sd = sd(protesta, na.rm = TRUE),
educ_media = mean(anos_educ_resp, na.rm = TRUE),
educ_padres_media = mean(anos_educ_padres, na.rm = TRUE),
movilidad_media = mean(movilidad_educ, na.rm = TRUE),
movilidad_sd = sd(movilidad_educ, na.rm = TRUE)
)
print(descriptivos_general)
# Tabla por grupos
descriptivos_grupos <- elsoc_analisis %>%
group_by(grupo_hipotesis_amplio) %>%
summarise(
n = n(),
n_personas = n_distinct(idencuesta),
protesta_media = mean(protesta, na.rm = TRUE),
protesta_sd = sd(protesta, na.rm = TRUE),
educ_media = mean(anos_educ_resp, na.rm = TRUE),
educ_padres_media = mean(anos_educ_padres, na.rm = TRUE),
movilidad_media = mean(movilidad_educ, na.rm = TRUE),
edad_media = mean(edad, na.rm = TRUE),
prop_genero = mean(genero, na.rm = TRUE) * 100
) %>%
arrange(grupo_hipotesis_amplio)
print(descriptivos_grupos)
# Exportar tabla
# GRÁFICOS DESCRIPTIVOS
# Distribución de movilidad
p1 <- ggplot(elsoc_analisis, aes(x = movilidad_educ)) +
geom_histogram(bins = 25, fill = "coral", alpha = 0.7, color = "black") +
geom_vline(xintercept = 0, linetype = "dashed", color = "red", linewidth = 1) +
theme_minimal() +
labs(title = "Distribución de movilidad educacional (ELSOC)",
x = "anos de movilidad educacional (respondiente - padres)",
y = "Frecuencia")
print(p1)
ggsave("dist_movilidad.png", p1, width = 10, height = 6, dpi = 300)
# Protesta por grupo
p2 <- ggplot(elsoc_analisis %>% filter(grupo_hipotesis_amplio != "Otros"),
aes(x = grupo_hipotesis_amplio, y = protesta)) +
geom_violin(fill = "lightblue", alpha = 0.5) +
geom_boxplot(width = 0.3, fill = "white", outlier.alpha = 0.3) +
stat_summary(fun = mean, geom = "point", color = "red", size = 3) +
stat_summary(fun = mean, geom = "text", aes(label = round(..y.., 2)),
vjust = -1, color = "red", size = 3) +
theme_minimal() +
labs(title = "Distribución de participación en marchas por grupo (ELSOC)",
subtitle = "Puntos rojos = media",
x = NULL,
y = "Asistencia a marchas (1-5)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
print(p2)
ggsave("protesta_por_grupo.png", p2, width = 12, height = 7, dpi = 300)
# Scatterplot: educación vs protesta, coloreado por movilidad
p3 <- ggplot(elsoc_analisis,
aes(x = anos_educ_resp, y = protesta, color = movilidad_cat)) +
geom_jitter(alpha = 0.2, width = 0.3, height = 0.1) +
geom_smooth(method = "lm", se = TRUE, linewidth = 1) +
theme_minimal() +
labs(title = "Relación educación-protesta según movilidad educacional",
x = "anos de educación",
y = "Asistencia a marchas",
color = "Movilidad\neducacional") +
theme(legend.position = "right")
print(p3)
ggsave("educ_protesta_movilidad.png", p3, width = 10, height = 6, dpi = 300)
# ============================================
# 8. MODELOS DE EFECTOS ALEATORIOS ===========
# ============================================
# Convertir a panel
elsoc_panel <- pdata.frame(elsoc_analisis,
index = c("idencuesta", "ola"))
# Verificar estructura
cat("\n=== ESTRUCTURA PANEL ===\n")
is.pbalanced(elsoc_panel)
# ========================================
# MODELO 1: Solo efectos principales
# ========================================
modelo1 <- plm(protesta ~ anos_educ_resp +
edad + genero + ideologia + ola_factor,
data = elsoc_panel,
model = "random")
summary(modelo1)
# ========================================
# MODELO 2: Con movilidad educativa
# ========================================
modelo2 <- plm(protesta ~ anos_educ_resp +
movilidad_educ +
edad + genero + ideologia + ola_factor,
data = elsoc_panel,
model = "random")
# ========================================
# MODELO 3: Interacción educación × movilidad (PRINCIPAL)
# ========================================
modelo3 <- plm(protesta ~ anos_educ_resp * movilidad_educ +
edad + genero + ideologia + ola_factor,
data = elsoc_panel,
model = "random")
summary(modelo3)
# ========================================
# MODELO 4: Movilidad categórica con interacción
# ========================================
modelo4 <- plm(protesta ~ anos_educ_resp * movilidad_cat +
anos_educ_padres +
edad + genero + ideologia + ola_factor,
data = elsoc_panel,
model = "random")
summary(modelo4)
# ========================================
# MODELO 5: Grupos específicos (HIPÓTESIS DIRECTA)
# ========================================
modelo5 <- plm(protesta ~ grupo_hipotesis_amplio +
edad + genero + ideologia + ola_factor,
data = elsoc_panel,
model = "random")
summary(modelo5)
screenreg(list(modelo1, modelo2, modelo3, modelo4, modelo5),
custom.model.names = c("M1: Base", "M2: Movilidad",
"M3: Interacción", "M4: Cat. Interacción",
"M5: Grupos"))
modelo <- plm(protesta ~ anos_educ_resp + ideologia,
data = elsoc_panel,
model = "random")
screenreg(modelo)
modelo <- plm(protesta ~ anos_educ_resp + ideologia,
data = elsoc_panel,
model = "fixec")
modelo <- plm(protesta ~ anos_educ_resp + ideologia,
data = elsoc_panel,
model = "fd")
screenreg(modelo)
modelo <- plm(protesta ~ anos_educ_resp + ideologia,
data = elsoc_panel,
model = "between")
modelo <- plm(protesta ~ anos_educ_resp + ideologia,
data = elsoc_panel,
model = "pooling")
screenreg(modelo)
modelo <- plm(protesta ~ anos_educ_resp + ideologia,
data = elsoc_panel,
model = "random",
random.method = "walhus")
screenreg(modelo)
modelo <- plm(protesta ~ anos_educ_resp + ideologia,
data = elsoc_panel,
model = "random")
screenreg(modelo)
# ========================================
# MODELO 3: Interacción educación × movilidad (PRINCIPAL)
# ========================================
modelo3 <- plm(protesta ~ anos_educ_resp * movilidad_educ +
edad + genero + ideologia + ola_factor,
data = elsoc_panel,
model = "random",
random.method = "walhus")
summary(modelo3)
screenreg(modelo3)
#| echo: false
#| warning: false
#| message: false
# ========================================
# COMPARACIÓN DE MODELOS
# ========================================
screenreg(list(modelo1, modelo2, modelo3, modelo4, modelo5),
custom.model.names = c("M1: Base", "M2: Movilidad",
"M3: Interacción", "M4: Cat. Interacción",
"M5: Grupos"))
#| echo: false
#| warning: false
#| message: false
# Preparar datos para gráfico
efectos_grupos <- data.frame(
Grupo = c("Básica/Media inc.", "Media completa",
"Técnicos sin mov.", "Técnicos alta mov.",
"Univ. sin mov.", "Univ. alta mov.", "Otros"),
Coef = c(0, 0.09, 0.37, 0.18, 0.31, 0.34, 0.25),
SE = c(0, 0.02, 0.03, 0.03, 0.04, 0.03, 0.03)
) %>%
mutate(
CI_lower = Coef - 1.96 * SE,
CI_upper = Coef + 1.96 * SE
)
# Gráfico de coeficientes
ggplot(efectos_grupos, aes(x = reorder(Grupo, Coef), y = Coef)) +
geom_point(size = 3) +
geom_errorbar(aes(ymin = CI_lower, ymax = CI_upper), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
coord_flip() +
labs(
title = "Efecto de educación y movilidad en participación en protestas",
subtitle = "Referencia: Básica/Media incompleta",
x = "", y = "Coeficiente (puntos de cambio en probabilidad)",
caption = "Barras representan intervalos de confianza 95%"
) +
theme_minimal()
#| echo: false
#| warning: false
#| message: false
# Extraer coeficientes
coefs <- coef(modelo4)
print(coefs)  # Ver nombres exactos
# Crear función para calcular predicción
predecir_protesta <- function(educ, movilidad, edad_val, ideol_val,
educ_padres_val, ola = "1") {
# Intercepto base
pred <- coefs["(Intercept)"]
# Edad, género (0=hombre), ideología, educ padres
pred <- pred + coefs["edad"] * edad_val
pred <- pred + coefs["genero"] * 0  # Fijo en hombre
pred <- pred + coefs["ideologia"] * ideol_val
pred <- pred + coefs["anos_educ_padres"] * educ_padres_val
# Educación propia (efecto principal)
pred <- pred + coefs["anos_educ_resp"] * educ
# Efectos de movilidad + interacciones
if (movilidad == "Sin movilidad") {
pred <- pred + coefs["movilidad_catSin movilidad"]
pred <- pred + coefs["anos_educ_resp:movilidad_catSin movilidad"] * educ
} else if (movilidad == "Movilidad moderada") {
pred <- pred + coefs["movilidad_catMovilidad moderada"]
pred <- pred + coefs["anos_educ_resp:movilidad_catMovilidad moderada"] * educ
} else if (movilidad == "Alta movilidad ascendente") {
pred <- pred + coefs["movilidad_catAlta movilidad ascendente"]
pred <- pred + coefs["anos_educ_resp:movilidad_catAlta movilidad ascendente"] * educ
}
# Si es "Movilidad descendente" no se suma nada (es la referencia)
# Efectos de ola
ola_coef_name <- paste0("ola_factor", ola)
if (ola_coef_name %in% names(coefs)) {
pred <- pred + coefs[ola_coef_name]
}
return(pred)
}
# Valores típicos para otras variables
edad_media <- mean(elsoc_panel$edad, na.rm = TRUE)
ideol_media <- mean(elsoc_panel$ideologia, na.rm = TRUE)
educ_padres_media <- mean(elsoc_panel$anos_educ_padres, na.rm = TRUE)
# Crear datos de predicción
datos_pred <- expand.grid(
anos_educ = seq(8, 20, by = 1),
movilidad = c("Movilidad descendente", "Sin movilidad",
"Movilidad moderada", "Alta movilidad ascendente")
)
# Calcular predicciones
datos_pred$prediccion <- mapply(
predecir_protesta,
educ = datos_pred$anos_educ,
movilidad = datos_pred$movilidad,
MoreArgs = list(
edad_val = edad_media,
ideol_val = ideol_media,
educ_padres_val = educ_padres_media,
ola = "1"
)
)
# Visualizar
library(ggplot2)
ggplot(datos_pred, aes(x = anos_educ, y = prediccion,
color = movilidad, linetype = movilidad)) +
geom_line(size = 1.2) +
scale_color_manual(values = c("Movilidad descendente" = "#d62728",
"Sin movilidad" = "#ff7f0e",
"Movilidad moderada" = "#2ca02c",
"Alta movilidad ascendente" = "#1f77b4")) +
labs(
title = "Efecto de la educación según tipo de movilidad social",
subtitle = "Probabilidad predicha de participar en protestas (Ola 1, valores promedio de controles)",
x = "anos de educación del respondente",
y = "Probabilidad predicha de protestar",
color = "Tipo de movilidad",
linetype = "Tipo de movilidad"
) +
theme_minimal(base_size = 12) +
theme(
legend.position = "bottom",
legend.title = element_text(face = "bold")
) +
guides(color = guide_legend(nrow = 2))
#| echo: false
#| warning: false
#| message: false
# ============================================
# 9. TESTS DIAGNÓSTICOS ======================
# ============================================
# Modelo de efectos fijos para comparación
modelo3_fe <- plm(protesta ~ anos_educ_resp * movilidad_educ +
edad + genero + ola_factor,
data = elsoc_panel,
model = "within")
modelo5_fe <- plm(protesta ~ grupo_hipotesis_amplio +
edad + genero + ola_factor,
data = elsoc_panel,
model = "within")
# TEST DE HAUSMAN (RE vs FE)
cat("\n=== TEST DE HAUSMAN: Modelo con interacción ===\n")
test_hausman_3 <- phtest(modelo3, modelo3_fe)
print(test_hausman_3)
cat("\n=== TEST DE HAUSMAN: Modelo con grupos ===\n")
test_hausman_5 <- phtest(modelo5, modelo5_fe)
print(test_hausman_5)
# TEST DE BREUSCH-PAGAN (RE vs Pooled)
modelo3_pooled <- plm(protesta ~ anos_educ_resp * movilidad_educ +
edad + genero + ola_factor,
data = elsoc_panel,
model = "pooling")
cat("\n=== TEST DE BREUSCH-PAGAN ===\n")
test_bp <- plmtest(modelo3_pooled, type = "bp")
print(test_bp)
# ERRORES ESTÁNDAR ROBUSTOS
cat("\n=== MODELO 3 CON ERRORES ROBUSTOS ===\n")
coeftest(modelo3, vcov = vcovHC(modelo3, type = "HC1"))
cat("\n=== MODELO 5 CON ERRORES ROBUSTOS ===\n")
coeftest(modelo5, vcov = vcovHC(modelo5, type = "HC1"))
